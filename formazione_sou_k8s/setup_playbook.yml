- name: Configure and Install Docker, K8s and Jenkins
  hosts: all
  become: true
  vars_files:
    - vars/secrets.yml
  tasks:
    - name: Install packages
      ansible.builtin.dnf:
        name:
          - dnf-plugins-core
          - epel-release
          - python3-requests
        state: present

    - name: Set up Docker repo
      ansible.builtin.yum_repository:
        name: docker
        description: Docker repo
        baseurl: https://download.docker.com/linux/centos/9/x86_64/stable
        gpgcheck: true
        gpgkey: https://download.docker.com/linux/centos/gpg
        enabled: true
    
    - name: Clean DNF cache
      ansible.builtin.shell:
        cmd: dnf clean all

    - name: Install Docker and Kubernetes packages
      ansible.builtin.dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - python3-kubernetes
        state: present
        update_cache: true

    - name: Start Docker
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    - name: Add vagrant user to docker group
      ansible.builtin.user:
        name: vagrant
        groups: docker
        append: true

    - name: Create Docker network
      community.docker.docker_network:
        name: my_network
        state: present
        driver: bridge
        ipam_config:
          - subnet: "192.168.100.0/24"
            gateway: "192.168.100.1"

    - name: Download and install K3s
      ansible.builtin.shell:
        cmd: "curl -sfL https://get.k3s.io | sh -"
        creates: /usr/local/bin/k3s

    - name: Ensure .kube directory exists
      ansible.builtin.file:
        path: /home/vagrant/.kube
        state: directory
        owner: vagrant
        group: vagrant
        mode: '0755'
    
    - name: Copy kubeconfig to default location
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /home/vagrant/.kube/config
        remote_src: true
        owner: vagrant
        group: vagrant
        mode: '0600'
    
    - name: Set KUBECONFIG environment variable
      ansible.builtin.lineinfile:
        path: /home/vagrant/.bashrc
        line: export KUBECONFIG=/home/vagrant/.kube/config
        create: yes
    
    - name: Create namespace for K8s
      kubernetes.core.k8s:
        kubeconfig: /home/vagrant/.kube/config
        state: present
        name: formazione-sou
        api_version: v1
        kind: Namespace

    - name: Install Jenkins
      community.docker.docker_image:
        name: jenkins/jenkins
        state: present
        tag: lts
        source: pull

    - name: Create Jenkins volume
      community.docker.docker_volume:
        name: jenkins_home
        state: present

    - name: Run Jenkins container
      community.docker.docker_container:
        name: jenkins-master
        image: jenkins/jenkins:lts
        state: started
        restart_policy: always
        ports:
          - "8080:8080"
          - "50000:50000"
        networks:
          - name: my_network
            ipv4_address: 192.168.100.44
        volumes:
          - jenkins_home:/var/jenkins_home

    - name: Download Helm binary
      community.docker.docker_container_exec:
        container: jenkins-master
        user: jenkins
        command: "curl -fsSL -o /var/jenkins_home/helm.tar.gz https://get.helm.sh/helm-v3.16.3-linux-amd64.tar.gz"

    - name: Extract Helm binary
      community.docker.docker_container_exec:
        container: jenkins-master
        user: jenkins
        command: "tar -xzf /var/jenkins_home/helm.tar.gz -C /var/jenkins_home --strip-components=1 linux-amd64/helm"

    - name: Move Helm binary to /usr/local/bin
      community.docker.docker_container_exec:
        container: jenkins-master
        user: root
        command: "/bin/sh -c 'mv /var/jenkins_home/helm /usr/local/bin/helm && chmod +x /usr/local/bin/helm'"
    
    - name: Create .kube dir in jenkins_home
      community.docker.docker_container_exec:
        container: jenkins-master
        user: jenkins
        command: mkdir -p /var/jenkins\_home/.kube
    
    - name: Update kubeconfig to use forward IP
      ansible.builtin.replace:
        path: /home/vagrant/.kube/config
        regexp: 'server: https://127\.0\.0\.1:6443'
        replace: 'server: https://10.0.2.15:6443'
      become: true
    
    - name: Copy kubeconfig to Jenkins container
      ansible.builtin.command:
        cmd:  docker cp /home/vagrant/.kube/config jenkins-master:/var/jenkins\_home/.kube/config
      become: true

    - name: Copy ssh_key to Jenkins container
      ansible.builtin.command:
        cmd:  docker cp /home/vagrant/.ssh/id_rsa jenkins-master:/var/jenkins\_home/.ssh/id_rsa
      become: true
    
    - name: Set permission for ssh_key
      community.docker.docker_container_exec:
        container: jenkins-master
        user: root
        command: chmod 600 /var/jenkins\_home/.ssh/id_rsa

    - name: Pull Jenkins agent image
      community.docker.docker_image:
        name: jenkins/inbound-agent
        tag: latest
        source: pull

    - name: Create Docker volume for Jenkins slave
      community.docker.docker_volume:
        name: jenkins_slave_home
        state: present

    - name: Run jenkins slave and connect to jenkins-master
      community.docker.docker_container:
        name: jenkins-slave
        image: jenkins/inbound-agent:latest
        state: started
        env:
          JENKINS_URL: "http://jenkins-master:8080"
          JENKINS_AGENT_NAME: "Jenkins-slave"
          JENKINS_AGENT_WORKDIR: "/home/jenkins/agent"
          JENKINS_SECRET: "{{ jenkins_agent_secret }}"
        volumes:
          - jenkins_slave_home:/home/jenkins/agent
          - /var/run/docker.sock:/var/run/docker.sock
          - /usr/bin/docker:/usr/bin/docker
        networks:
          - name: my_network

    - name: Add jenkins user to docker group in jenkins-slave container
      community.docker.docker_container_exec:
        container: jenkins-slave
        command: usermod -aG docker jenkins
        user: root
