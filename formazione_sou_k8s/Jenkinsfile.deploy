pipeline {
	agent { label 'master' }
	environment {
		KUB_NAMESPACE = 'formazione-sou'
	}
	parameters {
		string(name: 'TAG', defaultValue: 'latest', description: 'Docker image tag')
	}
	stages {
		stage('Clone repository') {
			steps {
				checkout scm
			}
		}
		stage('Clean previous helm release') {
			steps {
				script {
					def helmRelease = sh(script: 'helm list --namespace ${KUB_NAMESPACE} --short', returnStdout: true).trim()
					if (helmRelease) {
						echo "Uninstalling previous helm release..."
						sh 'helm uninstall my-app --namespace ${KUB_NAMESPACE} --debug'
					} else {
						echo 'No previous helm release found'
					}
				}
			}
		}
		stage('Helm install') {
			steps {
				dir('formazione_sou_k8s/flask-app/charts') {
					script {
						sh '''
						#!/bin/bash
						helm install my-app . --namespace ${KUB_NAMESPACE} --set image.tag=${TAG} --debug
						'''
					}
				}
			}
		}
		stage('Export deployment') {
			steps {
				script {
					sh '''
					#!/bin/bash
					ssh -t -i /var/jenkins_home/.ssh/id_rsa -o StrictHostKeyChecking=no vagrant@192.168.10.10 && chmod +x /home/vagrant/export-deployment.sh && bash /home/vagrant/export-deployment.sh
					'''
				}
			}
		}
	}
	post {
		always {
			echo 'Cleaning up workspace'
			cleanWs()
		}
	}
}
