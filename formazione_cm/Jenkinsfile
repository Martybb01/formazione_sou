pipeline {
	agent any
	environment {
		CONTAINER_RUNTIME = "docker"
		DOCKER_REGISTRY = "localhost:5000"
		PODMAN_REGISTRY = "localhost:5001"
		IMAGE_TAG = "${env.BUILD_ID}"
		PATH = "/usr/local/bin:$PATH"
	}
	stages {
		stage('Setup') {
			steps {
				script {
					registry = env.CONTAINER_RUNTIME == "docker" ? env.DOCKER_REGISTRY : env.PODMAN_REGISTRY
					isDocker = env.CONTAINER_RUNTIME == "docker"
				}
			}
		}
		stage('Build and Push Alpine image') {
			steps {
				dir('formazione_cm/alpine') {
					script {
						if (isDocker) {
							def alpine_image = docker.build("${registry}/alpine:${IMAGE_TAG}")
							alpine_image.push()
						} else {
							build_and_push_image("${registry}/alpine:${IMAGE_TAG}", "podman")
						}
					}
				}
			}
		}
		stage('Build and Push Rocky image') {
			steps {
				dir('formazione_cm/rocky') {
					script {
						if (isDocker) {
							def rocky_image = docker.build("${registry}/rocky:${IMAGE_TAG}")
							rocky_image.push()
						} else {
							build_and_push_image("${registry}/rocky:${IMAGE_TAG}", "podman")
						}
					}
				}
			}
		}
		stage('Deploy contianers') {
			steps {
				dir('formazione_cm') {
					script {
						ansiblePlaybook(
							playbook: 'deploy_containers.yml',
							inventory: 'inventory',
							extraVars: [
								docker_registry: env.DOCKER_REGISTRY,
								podman_registry: env.PODMAN_REGISTRY,
								image_tag: env.IMAGE_TAG
							]
						)
					}
			}
		}
	}
	post {
		always {
			cleanWs()
		}
	}
}

def build_and_push_image(image, runtime) {
	sh "${runtime} build -t ${image} ."
	sh "${runtime} push ${image}"
}
